log4j.rootLogger=DEBUG,console,file,daily
log4j.addivity.org.apache=true

# 应用于控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Encoding=UTF-8
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} | [%p] | %t | %l | %m%n

# 每天新建日志 TODO 每天，每次均新建文件，以时间为文件名
log4j.appender.daily=org.apache.log4j.DailyRollingFileAppender
log4j.appender.daily.File=./logs/log/ecommerce.log
# log4j.appender.daily.MaxFileSize=50MB
# log4j.appender.daily.MaxBackupIndex=1
log4j.appender.daily.Encoding=UTF-8
log4j.appender.daily.Append=false
log4j.appender.daily.DatePattern='.'yyyy-MM-dd
log4j.appender.daily.layout=org.apache.log4j.PatternLayout
log4j.appender.daily.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} | [%p] | %t | %l | %m%n

#应用于文件
log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.File=./ecommerce-spark.log
log4j.appender.file.Append=false
log4j.appender.file.Encoding=UTF-8
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} | [%p] | %t | %l | %m%n

#-X号: X信息输出时左对齐；
#%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,
#%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#%r: 输出自应用启动到输出该log信息耗费的毫秒数
#%c: 输出日志信息所属的类目，通常就是所在类的全名
#%t: 输出产生该日志事件的线程名
#%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)
#%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
#%%: 输出一个”%”字符
#%F: 输出日志消息产生时所在的文件名称
#%L: 输出代码中的行号
#%m: 输出代码中指定的消息,产生的日志具体信息
#%n: 输出一个回车换行符，Windows平台为”\r\n”，Unix平台为”\n”输出日志信息换行